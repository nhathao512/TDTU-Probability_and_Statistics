# -*- coding: utf-8 -*-
"""Lab3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dBQh1lJzUyv42Py4SjEClV-2BsUtcYtR
"""

#Vi du
from fractions import Fraction
def P(event, space):
  return Fraction(len(event & space), len(space))
S = {'BB', 'BG', 'GB', 'GG'}
B = {s for s in S if 'B' in s}
A_B = {s for s in B if s.count('B') == 2}

P_B = P(B, S)
P_A_B = P(A_B, S)
P_A_with_B = P_A_B/P_B
print(P_A_with_B)

#Exercise 1
from fractions import Fraction
def P(event, space):
  return Fraction(len(event & space), len(space))
S = {'MMM', 'MMF', 'MFM', 'MFF','FMM', 'FMF', 'FFM', 'FFF'}
print(len(S))

B = {s for s in S if 'F' in s}
print(B)

A_B = {s for s in B if s.count('F') == 3}
print(A_B)

P_B = P(B, S)
P_A_B = P(A_B, S)
P_A_with_B = P_A_B / P_B
print(P_A_with_B)

#Exercise 2
from fractions import Fraction
S = [('Thanh', 'Nữ'), ('Hồng', 'Nữ'), ('Thương', 'Nữ'), ('Đào', 'Nữ'),
      ('My', 'Nữ'), ('Yến', 'Nữ'), ('Hạnh', 'Nữ'),('My', 'Nữ'), ('Vy', 'Nữ'),
       ('Tiên', 'Nữ'), ('Thanh', 'Nam'), ('Thanh', 'Nam'), ('Bình', 'Nam'),
        ('Nhật', 'Nam'), ('Hào', 'Nam'), ('Đạt', 'Nam'), ('Minh', 'Nam')]
#a
A = [s for s in S if 'Thanh' in s]
print(A)

#b
B = [s for s in S if 'Nữ' in s]
print(B)

#c
A_B = [s for s in S if 'Thanh' in s and 'Nữ' in s]
print(A_B)

#d
P_A = len(A)/ len(S)
print(P_A)
P_B = len(B)/ len(S)
print(P_B)
P_A_B = len(A_B)/ len(S)
print(P_A_B)

#e
P_A_B_with_A = P_A_B / P_B
print(P_A_B_with_A)

#Exercise 3
from traitlets.traitlets import All
from itertools import product
from itertools import combinations
import random
import itertools

Ranks = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 'J', 'Q', 'K'}
Suits = {'♡', '♢', '♣', '♠'}

#a
# Cards = list(product(Ranks, Suits))
# print(Cards)
Cards = []
for s in Suits:
  for r in Ranks:
    card = str(r) + s
    Cards.append(card)
print(Cards)

#b
B = random.sample(Cards, 3)
print(B)

#c
U3 = list(itertools.combinations(Cards, 3))
A1 = []
for s1 in U3:
  count_K = [c[0] for c in s1].count('K')
  if count_K == 1 or count_K == 2:
    A1.append(s1)

#d
A2 = []
for s2 in U3:
  if 'K' in [c[0] for c in s2]:
    A2.append(s2)

#e
print(len(A1) / len(U3))
print(len(A2) / len(U3))