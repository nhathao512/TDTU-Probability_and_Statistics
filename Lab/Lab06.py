# -*- coding: utf-8 -*-
"""Lab6.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t51PCcU4YGvJUxmaArul-ejQuU91FWLX
"""

#Bernoulli distribution
import matplotlib.pyplot as plt
import math

def pmf_bernoulli(p, x):
  return p**x*(1-p)**(1-x)

print(pmf_bernoulli(0.5, 1))

def plot_pmf_bernoulli(p):
  X = [0, 1]
  P_bernoulli = [pmf_bernoulli(p, x) for x in X]
  plt.plot(X, P_bernoulli, 'o')
  plt.title('PMF of Bernoulli(p=%.2f)' % (p))
  plt.xlabel('Value')
  plt.ylabel('Probability')
  plt.show()
plot_pmf_bernoulli(0.5)

#Binomial distribution
import matplotlib.pyplot as plt
import math

def pmf_binom(k, n, p):
  return math.comb(n, k)*p**k*(1-p)**(n-k)
print(pmf_binom(4, 15, 0.5))

def plot_pmf_binom(n, p):
  K = list(range(0, n+1))
  P_binom = [pmf_binom(k, n, p) for k in K]
  plt.plot(K, P_binom, '-o')
  axes = plt.gca()
  axes.set_xlim ([0, n])
  axes.set_ylim ([0, 1.1 * max (P_binom)])
  plt.title('PMF of Bin(%i, %.2f)' % (n, p))
  plt.xlabel('Number k of successes')
  plt.ylabel('Probability of k successes')
  plt.show()
plot_pmf_binom(15, 0.5)

#Poisson distribution
import matplotlib.pyplot as plt
import math

def pmf_poisson(k, lam):
  return (lam**k*math.e**(-lam))/math.factorial(k)
print(pmf_poisson(10, 5))
def plot_pmf_poisson (n, lam):
  K = list(range(0, n + 1))
  P_poisson = [pmf_poisson (k, lam) for k in K]
  plt.plot (K, P_poisson, '-o')
  plt.title('PMF of Poisson (%i)' %lam)
  plt.xlabel('Number of Events')
  plt.ylabel('Probability of Number of Events')
  plt.show()
plot_pmf_poisson (25, 5)

#Geometric distribution
import matplotlib.pyplot as plt
import math

def pmf_geo(p, x):
  return p*(1-p)**(x-1)
print(pmf_geo(0.3, 5))

def plot_pmf_geo(p, n):
  X = list(range(0, n + 1))
  P_geo = [pmf_geo(p, x) for x in X]
  plt.plot (X, P_geo, '-o')
  plt.title('PMF of Geometric (%i)' %p)
  plt.xlabel('Number of Events')
  plt.ylabel('Probability of Number of Events')
  plt.show()
plot_pmf_geo(0.3, 10)

#Exercise 1
import matplotlib.pyplot as plt
import math

def pmf_binom(k, n, p):
  return math.comb(n, k)*p**k*(1-p)**(n-k)
print(pmf_binom(2, 5, 0.1))

def plot_pmf_binom(n, p):
  K = [0, 1, 2, 3, 4, 5]
  P_binom = [pmf_binom(k, n, p) for k in K]
  plt.plot(K, P_binom, '-o')
  axes = plt.gca()
  axes.set_xlim ([0, n])
  axes.set_ylim ([0, 1.1 * max (P_binom)])
  plt.title('PMF of Bin(%i, %.2f)' % (n, p))
  plt.xlabel('Number k of successes')
  plt.ylabel('Probability of k successes')
  plt.show()
plot_pmf_binom(5, 0.1)

#Exercise 2
import matplotlib.pyplot as plt
import math

def pmf_poisson(k, lam):
  return (lam**k*math.e**(-lam))/math.factorial(k)
print(pmf_poisson(2, 3))

def plot_pmf_poisson (n, lam):
  K = [0, 1, 2, 3, 4, 5]
  P_poisson = [pmf_poisson (k, lam) for k in K]
  plt.plot (K, P_poisson, '-o')
  plt.title('PMF of Poisson (%i)' %lam)
  plt.xlabel('Number of Events')
  plt.ylabel('Probability of Number of Events')
  plt.show()
plot_pmf_poisson(5, 5)

#Exercise 3
import matplotlib.pyplot as plt
import math

def pmf_geo(p, x):
  return p*(1-p)**(x-1)
print(pmf_geo(0.4, 3))

def plot_pmf_geo(p, n):
  X = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
  P_geo = [pmf_geo(p, x) for x in X]
  plt.plot (X, P_geo, '-o')
  plt.title('PMF of Geometric (%i)' %p)
  plt.xlabel('Number of Events')
  plt.ylabel('Probability of Number of Events')
  plt.show()
plot_pmf_geo(0.4, 10)