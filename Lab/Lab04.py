# -*- coding: utf-8 -*-
"""Lab4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FWVT6TZTBxu7L9cCSGcib_wA3nIz6Xnt
"""

import random
import math

x = [random.randint(1, 6) for i in range(8000)]
X = set(x)
P = [x.count(i)/len(x) for i in X]
FX = sum(P[:3])

EX = 0
for x in X:
  EX = EX + (x * P[x-1])

VarX = 0
for x in X:
  VarX = VarX + (x-EX)*(x-EX)*P[x-1]

SD = math.sqrt(VarX)

print(x)
print(X)
print(P)
print(FX)
print(EX)
print(VarX)
print(SD)

#Exercise 1
import random
import math
import numpy as np

x = np.random.choice([0, 1, 2, 3, 4, 5], 3650, p=[0.1, 0.2, 0.3, 0.2, 0.15, 0.05])
print(x)
x1 = x.tolist()
print(x1)
#a
X = set(x1)
print(X)
#b
P = [x1.count(i)/len(x1) for i in X]
print(P)
#c
EX = 0
for x1 in X:
  EX = EX + (x1 * P[x1-1])
print(EX)

VarX = 0
for x1 in X:
  VarX = VarX + (x1-EX)*(x1-EX)*P[x1-1]
print(VarX)

SD = math.sqrt(VarX)
print(SD)
#d
FX = sum(P[3: -1])
print(FX)

#Exercise 2
import random
import math
#a
x = [random.randint(0, 2) for i in range(10000)]
print(x)
#b
X = set(x)
print(X)
#c
P = [x.count(i)/len(x) for i in X]
print(P)
#d
EX = 0
for x in X:
  EX = EX + (x * P[x-1])
print(EX)

VarX = 0
for x in X:
  VarX = VarX + (x-EX)*(x-EX)*P[x-1]
print(VarX)

SD = math.sqrt(VarX)
print(SD)
#e
FX = P[1] + P[2]
print(FX)